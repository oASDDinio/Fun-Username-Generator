import random

class AdvancedUsernameGenerator:
    def __init__(self, adjectives, nouns, numbers, symbols):
        self.adjectives = adjectives
        self.nouns = nouns
        self.numbers = numbers
        self.symbols = symbols

    def generate_username(self, structure="adj_noun_num"):
        if structure == "adj_noun_num":
            adjective = random.choice(self.adjectives)
            noun = random.choice(self.nouns)
            number = random.choice(self.numbers)
            username = f"{adjective}_{noun}_{number}"
        elif structure == "noun_adj_num_sym":
            noun = random.choice(self.nouns)
            adjective = random.choice(self.adjectives)
            number = random.choice(self.numbers)
            symbol = random.choice(self.symbols)
            username = f"{noun}_{adjective}_{number}{symbol}"
        else:
            raise ValueError("Invalid username structure specified")

        return username

    def generate_password(self, length=12):
        characters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()-_=+"
        password = ''.join(random.choice(characters) for _ in range(length))
        return password

    def generate_email(self, domain="example.com"):
        username = self.generate_username()
        email = f"{username}@{domain}"
        return email

if __name__ == "__main__":
    adjectives_list = ["creative", "swift", "mysterious", "dynamic"]
    nouns_list = ["coder", "explorer", "pioneer", "dreamer"]
    numbers_list = [2023, 1234, 5678, 9999]
    symbols_list = ["!", "@", "#", "$"]

    username_generator = AdvancedUsernameGenerator(adjectives_list, nouns_list, numbers_list, symbols_list)

    generated_username = username_generator.generate_username("noun_adj_num_sym")
    generated_password = username_generator.generate_password()
    generated_email = username_generator.generate_email()

    print("Generated Username:", generated_username)
    print("Generated Password:", generated_password)
    print("Generated Email:", generated_email)
